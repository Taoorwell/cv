{
    "c_id":1,
    "base_dir":"../../static/",
    "avatar_dir":"images/avatar1.jpg",
    "one_sentence_introduction":"Remote Sensing with Deep Learning!",
    "email":"taoorwell@gmail.com",
    "name":"Tao Jiang",
    "English_name": "Tao Orwell",
    "phone":"15201589164",
    "website":"https://www.taoorwell.top",
    "edus":[
            {"id":1,
             "time":"2013-2017",
             "name":"Anhui Agriculture University",
             "href":"xxxxxxxxxx",
             "honors":["Professional first class Scholarship",
                       "National Inspirational Scholarship"
                       ]
            },
            {"id":2,
             "time":"2017-Present",
             "name":"Beijing Forestry University",
             "href":"xxxxxxxx",
             "honors":["Professional first class Scholarship",
                       "Professional second class Scholarship"]
            }
           ],
    "project_experience":[
                          {"id":1,                           
                           "name":"Convolutional neural networks for GF-2 images stand type classification",
                           "duty":"xxxxxxxx",
                           "content":"xxxxxxxx",
                           "git_link":"xxxxxxxx",
                           "img":["images/CNN.png"],
                           "full_content":["The classification of stand type based on remote sensing imagery is an important application in modern forest. In recent years, many studies have explored this territory using multiple data sources and classification algorithm. Convolutional neural network (CNN), a new neural network algorithm, has higher accuracy in pattern recognition, scene classification and objective detection because of its unique structure and deep learning technology. The purpose of this paper is to propose a convolutional neural network system tailored for GF-2 (a high-resolution multispectral remote sensing data) applied in stand type classification on pixel-level.We chose different image patches size (i.e. m=5, 7, 9 and 11) for building CNN and multilayer perceptrons (MLP) as benchmark in tensorflow (an open source library of machine intelligence), to train and compare classification accuracy of model. Experimental results showed that the CNN (m=9) outperformed MLP and CNNs (m=5, 7 and 11) by 10.91%, 6.55%, 1.3% and 2.54%, respectively, in overall classification accuracy. And the CNN (m=9) alleviates the effect of salt-and-pepper and boundary uncertainties greatly in visual assessment. CNN can fully exploit the spatial features of images while utilizing the spectral features of high-resolution images to improve classification accuracy. And on remote sensing image classification based on CNN, selecting the appropriate image patch size according to the data source and the features of the objective is the key measure to improve the classification accuracy and classification effect."]
                           },
                           {"id":2,
                           "class":"xxxxxx",
                           "name":"Hyperspectral Images Classification Based on Fusion Features Derived from 1D and 2D Convolutional Neural Networks",
                           "duty":"xxxxxxxx",
                           "content":"xxxxxxxx",
                           "git_link":"xxxxxxxx",
                           "img":["images/Fig.4.svg", "images/Fig.2.3.svg"],
                           "full_content":["In recent years, deep learning technology has been continuously developed and gradually transferred to various fields. Among them, Convolutional Neural Network (CNN), which has the ability to extract deep features of images due to its unique network structure, plays an increasingly important role in the realm of Hyperspectral images classification. This paper attempts to construct a features fusion model that combines the deep features derived from 1D-CNN and 2D-CNN, and explores the potential of features fusion model in the field of hyperspectral image classification. The experiment is based on the deep learning open source framework TensorFlow and Python3 as programming environment, firstly, constructing multi-layer perceptron (MLP), 1D-CNN and 2D-CNN models respectively, and then, using the pre-trained 1D-CNN and 2D-CNN models as feature extractors, finally, extracting features for constructing the features fusion model. Two general open hyperspectral datasets (Pavia University dataset and Pavia Center dataset) were selected as a test to compare classification accuracy and classification confidence between different models. The experimental results show that the features fusion model obtains higher overall accuracy (99.65% and 99.87%) and Kappa coefficient (0.9953 and 0.9982) and lower uncertainty for the boundary and unknown regions (3.43% and 3.58%) in the two datasets. Since features fusion model inherits the structural characteristics of 1D-CNN and 2D-CNN, the complementary advantages between the models are achieved, and the spectral and spatial features of hyperspectral imagery are fully exploited, thus getting state-of-the-art the classification accuracy and generalization performance."]
                           },
                           {"id":3,
                           "class":"xxxxxxxx",
                           "name":"Remote sensing image classification based on Google Earth Engine and TensorFlow",
                           "duty":"xxxxxxxx",
                           "content":"xxxxxxxx",
                           "git_link":"xxxxxxxx",
                           "blog_link":"xxxxxxxx",
                           "img":["images/Fig.5.png"],
                           "full_content":["The development of deep learning relies on the cloud computing and big data technology. Google Earth Engine is a platform based on Google Cloud that can provide global scale of geographic information processing and analysis. Due to the powerful Google data center and cloud computing resources, GEE can handle large areas of geographic data. Compared with traditional remote sensing image processing software, GEE provides a large amount of free data, such as Landsat4-8, Sentinel1-2 and other data derivatives, process and analysis on the platform directly without downloading in local machine. Google Colaboratory is a free Jupyter notebook environment that provides a free GPU and runs entirely in the cloud to speed up model training and prediction. This experiment uses GEE to select data and sample collection, and store the data in Google Drive, utilizing TensorFlow to build a model for training and evaluation in Google Colaboratory. It can complete all the work of remote sensing image classification in the cloud. It is also worth noting that since the image of the study area is generally large, the making patches is necessary in the prediction, and the size of the patches should be considered as the memory size of the server. The picture below is from 2018 Google Earth Engine User Summit."]}
                          ],
    "about_me": ["My name is Tao Jiang, a 2nd year graduate student from Beijing Forestry University, majoring in Forestry Remote Sensing and Information Technology. \nIn the first semester of postgraduate, I learn the basic knowledge of remote sensing and master the image process of data sources including multi-spectral, hyperspectral and LiDAR with ENVI and other images software.\nIn order to gain the ability to explore the field of remote sensing image classification, at the second semester, I turn the learning direction from images processing software to Python programming, it is possible to complete the images classification using pure Python scripts.\nIn the third semester, I start to learn deep learning technology based on Python. I gradually mastered the structural characteristics of the CNN model and TensorFlow in this process. At the same time, in order to accelerate the model training, I began to learn the knowledge of cloud computing, and I have experience in using AWS and Aliyun servers. I am very interested in this field and wanted to study in depth!"],
    "research": ["XXX"],
    "skills":[{"name":"Remote Sensing","score":"70","id":1},
              {"name":"Python","score":"70","id":2},
              {"name":"TensorFlow","score":"50","id":3}
            ],
    "detail_skills":[
                     {"id":1,
                      "name":"Python",
                      "score":70,
                      "content":"Familiar with Python's basic grammar rules and functional programming methods, have some knowledge of data analysis and machine learning packages such as Numpy, Matplotlib, Pandas and Scikit-learn, and know about Django and crawling.",
                      "icon":"glyphicon glyphicon-console"},
                     {"id":2,
                      "name":"TensorFlow",
                      "score":50,
                       "content":"Familiar with the basic working process of TensorFlow, have a certain grasp of tf.dataset, tf.keras and Tensorboard api, can fully achieve data preparation, model construction, model training and prediction process with TensorFlow.",
                      "icon":"glyphicon glyphicon-file"},
                     {"id":3,
                      "name":"Google Earth Engine",
                      "score":40,
                      "content":"Familiar with the basic structure of Google Earth Engine, data filtering and sample collection in Code Editor based on JavaScripts. Also has a certain grasp of Python earthengine-api and can be combined with TensorFlow for image processing. ",
                      "icon":"glyphicon glyphicon-globe"},
                     {"id":4,
                      "name":"Arcgis/ENVI",
                      "score":80,
                      "content":"Familiar with the processing process of basic remote sensing image processing software such as Arcgis/ENVI, for Arcgis to use a simple Python script for batch processing, master the process of preprocessing and classification of images using ENVI",
                      "icon":"glyphicon glyphicon-globe"},
                     {"id":5,
                      "name":"Google Colaboratory",
                      "score":70,
                     "content": "Familiar with the use of Jupyter editor, can use GPU hardware acceleration for model training, combined with Google Drive file storage, can realize training and prediction of classification model without relying on local computing resources",
                     "icon": "glyphicon glyphicon-cloud"},
                     {"id":6,
                      "name":"Git",
                      "score":70,
                     "content": "Familiar with Git's workflow and basic work commands, combined with Github, using git add. and git commit commands to achieve file version control, using git push and git pull commands to achieve file transfer between different devices.",
                     "icon":  "icon-github-alt"}],
    "contacts":[{"id":1,
                 "icon":"glyphicon glyphicon-envelope",
                 "name":"Email1",
                 "content":"taoorwell@gmail.com"},
                {"id":2,
                 "icon":"glyphicon glyphicon-envelope",
                 "name":"Email2",
                 "content":"taoorwell@163.com"},
                {"id":3,
                 "icon":"glyphicon glyphicon-phone",
                 "name":"Phone",
                 "content":"15201589164"},
                {"id":4,
                 "icon":"glyphicon glyphicon-comment",
                 "name":"Wechat",
                 "content":"deartaotao0512"},
                {"id":5,
                 "icon":"icon-github-alt",
                 "name":"Github",
                 "content":"https://www.github.com/Taoorwell",
                 "url":"xxxxxxxx"}

                ]
}
